[["index.html", "Primary Visualizations Chapter 1 About", " Primary Visualizations Neville Taraporevala 2023-04-20 Chapter 1 About This is my final project for Reproducible Data Science 2023. Visit our website to learn more about the Wichita Urban Coyote and Fox Project. "],["building-the-database.html", "Chapter 2 Building the database 2.1 Loading Packages 2.2 Create database 2.3 Creating tables 2.4 Database Diagram", " Chapter 2 Building the database 2.1 Loading Packages First, we call the package DBI. This package is necessary for using SQLite for buildling our database in R. library(DBI) 2.2 Create database Next, we create our database sighting_db and establish a connection to it in the same line. sighting_db &lt;- dbConnect(RSQLite::SQLite(), &quot;sighting_db.db&quot;) 2.3 Creating tables Our next step is to create the tables that we want to include in our database. These include a table for species, zip code, and date attributes and our table of sightings. 2.3.1 Species table We will start with our species table. Our species table includes our species of interest, coyote, red fox, and bobcat, as well as a category for other. For each, we have their family, genus, and species. “Other” will have no such identifying information, but later may include grey foxes, skunks, raccoons, possums, etc. Species is our primary key and will be referenced as a foreign key in our sightings table. dbExecute(sighting_db, &quot;CREATE TABLE species ( species varchar(10) PRIMARY KEY CHECK (species IN (&#39;Coyote&#39;, &#39;Red Fox&#39;, &#39;Bobcat&#39;, &#39;Other&#39;)), species_latin varchar(10) CHECK (species_latin IN (&#39;latrans&#39;, &#39;vulpes&#39;, &#39;rufus&#39;)), genus_latin varchar(10) CHECK (genus_latin IN (&#39;Canis&#39;, &#39;Vulpes&#39;, &#39;Lynx&#39;)), family_latin varchar(10) CHECK (family_latin IN (&#39;Canidae&#39;, &#39;Felidae&#39;)) );&quot;) 2.3.2 Zip code table Next we will build our zip code table. This will relate to the home zip code that people fill out in the survey. We hope this allows us to better understand where reports are coming from and locations we may need to target to increase reports. Each zip code will have an average annual income, average building density, and proportion of population that is white. dbExecute(sighting_db, &quot;CREATE TABLE zip_code ( zip_code integer(5) PRIMARY KEY, avg_income double, building_density double, proportion_white double );&quot;) 2.3.3 Date table Our third table will include attributes about when the sighting was recorded. The date along with the temperature and precipitation in Wichita (ICT) will be recorded. dbExecute(sighting_db, &quot;CREATE TABLE date ( date text PRIMARY KEY, temp_in_ICT float, precip_in_ICT float );&quot;) 2.3.4 Sighting table Our last is our most important table. This is the table that will be given from the data that will be collected from the sighting reporting form. dbExecute(sighting_db, &quot;CREATE TABLE sighting_reports ( sighting_id integer PRIMARY KEY AUTOINCREMENT, species varchar(10) CHECK (species IN (&#39;Coyote&#39;, &#39;Red Fox&#39;, &#39;Bobcat&#39;, &#39;Other&#39;)), utm_x float, utm_y float, date text, time text, action varchar(10), habitat varchar(10), count varchar(10), offspring varchar(100), feeling varchar(100), zip_code integer(5), FOREIGN KEY (date) REFERENCES date(date) FOREIGN KEY (species) REFERENCES species(species) FOREIGN KEY (zip_code) REFERENCES zip_code(zip_code) );&quot;) 2.4 Database Diagram Here is what our database looks like in diagram form. Figure 2.1: Diagram of Tables in Sightings Database "],["cleaning-the-data.html", "Chapter 3 Cleaning the data 3.1 Loading Packages 3.2 Import sightings CSV from Survey123 currently in data folder 3.3 Change the column names from the long names to shorter ones. 3.4 Coding Behavior 3.5 Coding Habitat and People’s Feelings 3.6 Removing false locations", " Chapter 3 Cleaning the data Before we can look at the data, we must first clean it so it is in a usable form. 3.1 Loading Packages First, we call the package tidyverse. This package has many helpful functions that we will use. library(tidyverse) 3.2 Import sightings CSV from Survey123 currently in data folder I have changed the x and y values so I can make this “data” public. I am not able to share the actual data. sightings &lt;- read.csv(&quot;../data/23-04-15_Sightings.csv&quot;) Check that went well, look at the first few rows and the names of the columns —- sightings %&gt;% as_tibble() ## # A tibble: 594 × 9 ## X ObjectID What.species.of.…¹ What.…² Pleas…³ How.m…⁴ Compl…⁵ x y ## &lt;int&gt; &lt;int&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 1 5 Coyote Moving… Reside… 1 Other -97.5 37.7 ## 2 2 6 Red Fox Moving… Reside… 1 Happy -97.5 37.7 ## 3 3 10 Other Other Other 1 Indeff… -97.2 37.9 ## 4 4 15 Red Fox Moving… Reside… 1 Happy -97.5 37.6 ## 5 5 17 Coyote Moving… Reside… 1 Worried -97.1 37.7 ## 6 6 18 Coyote Moving… Street… 3+ Scared… -97.3 37.6 ## 7 7 20 Other Huntin… Reside… 1 Lucky,… -97.3 37.7 ## 8 8 21 Red Fox Moving… Reside… 1 Indeff… -97.3 37.7 ## 9 9 22 Red Fox Mostly… Reside… 3+ Happy -97.4 37.7 ## 10 10 23 Red Fox Huntin… Reside… 1 Indeff… -97.4 37.7 ## # … with 584 more rows, and abbreviated variable names ## # ¹​What.species.of.animal.did.you.see., ²​What.was.the.animal.doing., ## # ³​Please.describe.the.habitat.the.animal.was.observed.in, ## # ⁴​How.many.animals.of.this.species.did.you.see.in.total., ## # ⁵​Complete.this.sentence..Seeing.this.animal.made.me.feel. 3.3 Change the column names from the long names to shorter ones. colnames(sightings) &lt;- c(&quot;SurveyNum&quot;, &quot;SurveyID&quot;, &quot;Species&quot;, &quot;Behavior&quot;, &quot;Habitat&quot;, &quot;Count&quot;, &quot;Feelings&quot;, &quot;x_long&quot;, &quot;y_lat&quot; ) Check that went ok sightings %&gt;% as_tibble() ## # A tibble: 594 × 9 ## SurveyNum SurveyID Species Behavior Habitat Count Feeli…¹ x_long y_lat ## &lt;int&gt; &lt;int&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 1 5 Coyote Moving_Fast Reside… 1 Other -97.5 37.7 ## 2 2 6 Red Fox Moving_Slow Reside… 1 Happy -97.5 37.7 ## 3 3 10 Other Other Other 1 Indeff… -97.2 37.9 ## 4 4 15 Red Fox Moving_Slow Reside… 1 Happy -97.5 37.6 ## 5 5 17 Coyote Moving_Slow,Mo… Reside… 1 Worried -97.1 37.7 ## 6 6 18 Coyote Moving_Fast,Vo… Street… 3+ Scared… -97.3 37.6 ## 7 7 20 Other Hunting_Eating Reside… 1 Lucky,… -97.3 37.7 ## 8 8 21 Red Fox Moving_Fast Reside… 1 Indeff… -97.3 37.7 ## 9 9 22 Red Fox Mostly_Station… Reside… 3+ Happy -97.4 37.7 ## 10 10 23 Red Fox Hunting_Eating Reside… 1 Indeff… -97.4 37.7 ## # … with 584 more rows, and abbreviated variable name ¹​Feelings 3.4 Coding Behavior The behaviors are currently coded in 1 cell each as a list of characters separated by commas. Instead, we can make these easier to run analyses on if we make these separate columns and code each behavior as a 1 or 0. These are all the combinations of behaviors people have put in. Not super important but interesting. unique(pull(sightings, Behavior)) ## [1] &quot;Moving_Fast&quot; ## [2] &quot;Moving_Slow&quot; ## [3] &quot;Other&quot; ## [4] &quot;Moving_Slow,Mostly_Stationary_Resting&quot; ## [5] &quot;Moving_Fast,Vocalizing,Hunting_Eating,Interacting_with_human_pet&quot; ## [6] &quot;Hunting_Eating&quot; ## [7] &quot;Mostly_Stationary_Resting,Vocalizing&quot; ## [8] &quot;Moving_Slow,Hunting_Eating&quot; ## [9] &quot;Moving_Fast,Hunting_Eating&quot; ## [10] &quot;Mostly_Stationary_Resting,Other&quot; ## [11] &quot;Moving_Fast,Vocalizing,Hunting_Eating&quot; ## [12] &quot;Roadkill&quot; ## [13] &quot;Mostly_Stationary_Resting&quot; ## [14] &quot;Moving_Slow,Mostly_Stationary_Resting,Interacting_with_human_pet&quot; ## [15] &quot;Moving_Slow,Mostly_Stationary_Resting,Other&quot; ## [16] &quot;Moving_Fast,Other&quot; ## [17] &quot;Hunting_Eating,Other&quot; ## [18] &quot;Interacting_with_human_pet&quot; ## [19] &quot;Moving_Slow,Moving_Fast,Mostly_Stationary_Resting&quot; ## [20] &quot;Moving_Fast,Vocalizing&quot; ## [21] &quot;Moving_Slow,Moving_Fast,Mostly_Stationary_Resting,Hunting_Eating&quot; ## [22] &quot;Vocalizing&quot; ## [23] &quot;Moving_Fast,Mostly_Stationary_Resting&quot; ## [24] &quot;Vocalizing,Interacting_with_human_pet&quot; ## [25] &quot;Mostly_Stationary_Resting,Interacting_with_human_pet&quot; ## [26] &quot;Moving_Slow,Moving_Fast&quot; ## [27] &quot;Moving_Fast,Interacting_with_human_pet&quot; ## [28] &quot;Mostly_Stationary_Resting,Hunting_Eating&quot; ## [29] &quot;Moving_Fast,Mostly_Stationary_Resting,Hunting_Eating&quot; ## [30] &quot;Moving_Slow,Other&quot; ## [31] &quot;Moving_Slow,Moving_Fast,Mostly_Stationary_Resting,Interacting_with_human_pet&quot; ## [32] &quot;Moving_Slow,Moving_Fast,Vocalizing,Interacting_with_human_pet,Other&quot; ## [33] &quot;Moving_Slow,Moving_Fast,Hunting_Eating&quot; ## [34] &quot;Moving_Slow,Vocalizing,Hunting_Eating&quot; ## [35] &quot;Moving_Slow,Moving_Fast,Mostly_Stationary_Resting,Vocalizing,Hunting_Eating,Interacting_with_human_pet,Other&quot; ## [36] &quot;Vocalizing,Other&quot; ## [37] &quot;Moving_Slow,Mostly_Stationary_Resting,Vocalizing&quot; ## [38] &quot;Moving_Fast,Vocalizing,Other&quot; ## [39] &quot;Moving_Fast,Hunting_Eating,Roadkill&quot; ## [40] &quot;Moving_Slow,Interacting_with_human_pet&quot; ## [41] &quot;Moving_Slow,Vocalizing&quot; ## [42] &quot;Moving_Slow,Moving_Fast,Mostly_Stationary_Resting,Vocalizing,Hunting_Eating&quot; ## [43] &quot;Mostly_Stationary_Resting,Hunting_Eating,Interacting_with_human_pet&quot; ## [44] &quot;Moving_Slow,Moving_Fast,Vocalizing&quot; ## [45] &quot;Moving_Slow,Vocalizing,Hunting_Eating,Interacting_with_human_pet&quot; ## [46] &quot;Moving_Slow,Mostly_Stationary_Resting,Vocalizing,Other&quot; ## [47] &quot;Interacting_with_human_pet,Other&quot; First, we will set up vectors of length (# of rows) with NA’s. sightings_length &lt;- length(pull(sightings, SurveyNum)) moving_fast &lt;- rep(NA, sightings_length) moving_slow &lt;- rep(NA, sightings_length) mostly_stationary_resting &lt;- rep(NA, sightings_length) hunting_eating &lt;- rep(NA, sightings_length) interacting_with_human_pet &lt;- rep(NA, sightings_length) vocalizing &lt;- rep(NA, sightings_length) roadkill &lt;- rep(NA, sightings_length) other_behavior &lt;- rep(NA, sightings_length) Now, for each vector, if that behavior is listed, put a 1 in its vector, else put a 0. for(i in 1:sightings_length){ behavior &lt;- pull(sightings, Behavior)[i] if(grepl(&quot;Moving_Fast&quot;, behavior)){ moving_fast [i] &lt;- 1 } else { moving_fast [i] &lt;- 0 } if(grepl(&quot;Moving_Slow&quot;, behavior)){ moving_slow [i] &lt;- 1 } else { moving_slow [i] &lt;- 0 } if(grepl(&quot;Mostly_Stationary_Resting&quot;, behavior)){ mostly_stationary_resting [i] &lt;- 1 } else { mostly_stationary_resting [i] &lt;- 0 } if(grepl(&quot;Hunting_Eating&quot;, behavior)){ hunting_eating [i] &lt;- 1 } else { hunting_eating [i] &lt;- 0 } if(grepl(&quot;Interacting_with_human_pet&quot;, behavior)){ interacting_with_human_pet [i] &lt;- 1 } else { interacting_with_human_pet [i] &lt;- 0 } if(grepl(&quot;Vocalizing&quot;, behavior)){ vocalizing [i] &lt;- 1 } else { vocalizing [i] &lt;- 0 } if(grepl(&quot;Roadkill&quot;, behavior)){ roadkill [i] &lt;- 1 } else { roadkill[i] &lt;- 0 } if(grepl(&quot;Other&quot;, behavior)){ other_behavior [i] &lt;- 1 } else { other_behavior [i] &lt;- 0 } } Now add these behavior vectors as columns on the database. And, remove the original behavior column, since it is now redundant. sightings_b &lt;- sightings %&gt;% mutate(Moving_fast = moving_fast, Moving_slow = moving_slow, Mostly_stationary_resting = mostly_stationary_resting, Hunting_eating = hunting_eating, Interacting_with_human_pet = interacting_with_human_pet, Vocalizing = vocalizing, Roadkill = roadkill, Other_behavior = other_behavior) %&gt;% select(-Behavior) Check that it is gone. names(sightings_b) ## [1] &quot;SurveyNum&quot; &quot;SurveyID&quot; ## [3] &quot;Species&quot; &quot;Habitat&quot; ## [5] &quot;Count&quot; &quot;Feelings&quot; ## [7] &quot;x_long&quot; &quot;y_lat&quot; ## [9] &quot;Moving_fast&quot; &quot;Moving_slow&quot; ## [11] &quot;Mostly_stationary_resting&quot; &quot;Hunting_eating&quot; ## [13] &quot;Interacting_with_human_pet&quot; &quot;Vocalizing&quot; ## [15] &quot;Roadkill&quot; &quot;Other_behavior&quot; Now delete all those intermediate behavior vectors. rm(behavior) rm(moving_fast) rm(moving_slow) rm(mostly_stationary_resting) rm(hunting_eating) rm(interacting_with_human_pet) rm(vocalizing) rm(roadkill) rm(other_behavior) And the old sightings data frame. rm(sightings) 3.5 Coding Habitat and People’s Feelings We will do the same thing to habitat and feelings that we did to behavior. These are all the combinations of habitats people have put in. Not super important but interesting. Here are all the combinations of habitat and feelings. unique(pull(sightings_b, Habitat)) ## [1] &quot;Residential_Area&quot; ## [2] &quot;Other&quot; ## [3] &quot;Residential_Area,Other&quot; ## [4] &quot;Street,Residential_Area,Wetland&quot; ## [5] &quot;Residential_Area,Wetland&quot; ## [6] &quot;Street&quot; ## [7] &quot;Street,Residential_Area&quot; ## [8] &quot;Neighborhood_Park&quot; ## [9] &quot;Residential_Area,Forested_Area,Neighborhood_Park&quot; ## [10] &quot;Wetland&quot; ## [11] &quot;Forested_Area&quot; ## [12] &quot;Street,Neighborhood_Park&quot; ## [13] &quot;Wetland,Other&quot; ## [14] &quot;Residential_Area,Neighborhood_Park&quot; ## [15] &quot;Wetland,Neighborhood_Park&quot; ## [16] &quot;Wetland,Forested_Area,Neighborhood_Park&quot; ## [17] &quot;Wetland,Forested_Area&quot; ## [18] &quot;Street,Wetland,Neighborhood_Park&quot; ## [19] &quot;Street,Parking_lot,Other&quot; ## [20] &quot;Street,Residential_Area,Other&quot; ## [21] &quot;Street,Residential_Area,Forested_Area&quot; ## [22] &quot;Street,Residential_Area,Wetland,Other&quot; ## [23] &quot;Street,Residential_Area,Forested_Area,Neighborhood_Park,Other&quot; ## [24] &quot;Parking_lot,Forested_Area&quot; ## [25] &quot;Street,Residential_Area,Neighborhood_Park&quot; ## [26] &quot;Street,Residential_Area,Parking_lot,Neighborhood_Park&quot; ## [27] &quot;Street,Residential_Area,Parking_lot,Forested_Area&quot; ## [28] &quot;Neighborhood_Park,Other&quot; ## [29] &quot;Forested_Area,Neighborhood_Park,Other&quot; ## [30] &quot;Parking_lot&quot; ## [31] &quot;Street,Other&quot; ## [32] &quot;Residential_Area,Parking_lot,Neighborhood_Park&quot; ## [33] &quot;Residential_Area,Forested_Area&quot; ## [34] &quot;Street,Wetland,Forested_Area,Other&quot; ## [35] &quot;Residential_Area,Wetland,Forested_Area&quot; ## [36] &quot;Forested_Area,Other&quot; ## [37] &quot;Street,Residential_Area,Parking_lot&quot; ## [38] &quot;Residential_Area,Forested_Area,Other&quot; ## [39] &quot;Street,Parking_lot,Forested_Area&quot; ## [40] &quot;Street,Residential_Area,Wetland,Forested_Area&quot; ## [41] &quot;Street,Residential_Area,Wetland,Neighborhood_Park&quot; unique(pull(sightings_b, Feelings)) ## [1] &quot;Other&quot; &quot;Happy&quot; ## [3] &quot;Indefferent&quot; &quot;Worried&quot; ## [5] &quot;Scared,Worried&quot; &quot;Lucky,Indefferent&quot; ## [7] &quot;Worried,Indefferent,Other&quot; &quot;Happy,Lucky&quot; ## [9] &quot;Lucky,Worried&quot; &quot;Happy,Lucky,Other&quot; ## [11] &quot;Scared,Other&quot; &quot;Lucky&quot; ## [13] &quot;Worried,Other&quot; &quot;Lucky,Worried,Indefferent&quot; ## [15] &quot;Happy,Worried&quot; &quot;Angry&quot; ## [17] &quot;Lucky,Scared,Worried&quot; &quot;Worried,Indefferent&quot; ## [19] &quot;Angry,Other&quot; &quot;Happy,Worried,Indefferent&quot; ## [21] &quot;Scared&quot; &quot;Happy,Lucky,Worried&quot; ## [23] &quot;Happy,Lucky,Scared&quot; &quot;Happy,Other&quot; ## [25] &quot;Happy,Indefferent&quot; &quot;Lucky,Indefferent,Other&quot; ## [27] &quot;Scared,Worried,Angry&quot; &quot;Happy,Lucky,Worried,Other&quot; ## [29] &quot;Happy,Lucky,Scared,Worried&quot; &quot;Scared,Worried,Indefferent&quot; ## [31] &quot;Worried,Angry&quot; First, we will set up vectors of length (# of rows) with NA’s. street &lt;- rep(NA, sightings_length) residential_area &lt;- rep(NA, sightings_length) parking_lot &lt;- rep(NA, sightings_length) wetland &lt;- rep(NA, sightings_length) forested_area &lt;- rep(NA, sightings_length) neighborhood_park &lt;- rep(NA, sightings_length) other_habitat &lt;- rep(NA, sightings_length) happy &lt;- rep(NA, sightings_length) lucky &lt;- rep(NA, sightings_length) scared &lt;- rep(NA, sightings_length) worried &lt;- rep(NA, sightings_length) indifferent &lt;- rep(NA, sightings_length) angry &lt;- rep(NA, sightings_length) other_feelings &lt;- rep(NA, sightings_length) Then we will fill the vectors with 1’s and 0’s. for(i in 1:sightings_length){ habitat &lt;- pull(sightings_b, Habitat)[i] if(grepl(&quot;Street&quot;, habitat)){ street [i] &lt;- 1 } else { street [i] &lt;- 0 } if(grepl(&quot;Residential_Area&quot;, habitat)){ residential_area [i] &lt;- 1 } else { residential_area [i] &lt;- 0 } if(grepl(&quot;Parking_lot&quot;, habitat)){ parking_lot [i] &lt;- 1 } else { parking_lot [i] &lt;- 0 } if(grepl(&quot;Wetland&quot;, habitat)){ wetland [i] &lt;- 1 } else { wetland [i] &lt;- 0 } if(grepl(&quot;Forested_Area&quot;, habitat)){ forested_area [i] &lt;- 1 } else { forested_area [i] &lt;- 0 } if(grepl(&quot;Neighborhood_Park&quot;, habitat)){ neighborhood_park [i] &lt;- 1 } else { neighborhood_park[i] &lt;- 0 } if(grepl(&quot;Other&quot;, habitat)){ other_habitat [i] &lt;- 1 } else { other_habitat [i] &lt;- 0 } feelings &lt;- pull(sightings_b, Feelings)[i] if(grepl(&quot;Happy&quot;, feelings)){ happy [i] &lt;- 1 } else { happy [i] &lt;- 0 } if(grepl(&quot;Lucky&quot;, feelings)){ lucky [i] &lt;- 1 } else { lucky [i] &lt;- 0 } if(grepl(&quot;Scared&quot;, feelings)){ scared [i] &lt;- 1 } else { scared [i] &lt;- 0 } if(grepl(&quot;Worried&quot;, feelings)){ worried [i] &lt;- 1 } else { worried [i] &lt;- 0 } if(grepl(&quot;Indefferent&quot;, feelings)){ indifferent [i] &lt;- 1 } else { indifferent [i] &lt;- 0 } if(grepl(&quot;Angry&quot;, feelings)){ angry [i] &lt;- 1 } else { angry [i] &lt;- 0 } if(grepl(&quot;Other&quot;, feelings)){ other_feelings [i] &lt;- 1 } else { other_feelings [i] &lt;- 0 } } And add these to our new data frame. sightings_b_h_f &lt;- sightings_b %&gt;% mutate(Street = street, Residential_area = residential_area, Parking_lot = parking_lot, Wetland = wetland, Forested_area = forested_area, Neighborhood_park = neighborhood_park, Other_habitat = other_habitat) %&gt;% select(-Habitat) %&gt;% mutate(Happy = happy, Lucky = lucky, Scared = scared, Worried = worried, Indifferent = indifferent, Angry = angry, Other_feelings = other_feelings) %&gt;% select(-Feelings) Finally, delete all those intermediate vectors. rm(habitat) rm(street) rm(residential_area) rm(parking_lot) rm(wetland) rm(forested_area) rm(neighborhood_park) rm(other_habitat) rm(feelings) rm(happy) rm(lucky) rm(scared) rm(worried) rm(indifferent) rm(angry) rm(other_feelings) And the old sightings data frame. rm(sightings_b) Now we are done coding behaviors, habitats, and feelings. On to location! 3.6 Removing false locations Some of the people filling out the survey were unable to get the map to work. Therefore, the location given is actually just the default location of the marker. So, we will change these values to NA’s instead of having lots of points at the same (wrong) place. for (i in 1:sightings_length){ if ((pull(sightings_b_h_f, x_long)[i] == -97.3140509999967 | pull(sightings_b_h_f, x_long)[i] == -97.3140509999934 | pull(sightings_b_h_f, x_long)[i] == -97.314051) &amp; (pull(sightings_b_h_f, y_lat)[i] == 37.682074 | pull(sightings_b_h_f, y_lat)[i] == 37.6820739999987| pull(sightings_b_h_f, y_lat)[i] == 37.6820739999974)){ sightings_b_h_f$x_long[i]=NA sightings_b_h_f$y_lat[i]=NA } } "],["preliminary-visualizations.html", "Chapter 4 Preliminary Visualizations 4.1 Maps 4.2 How people feel seeing canids", " Chapter 4 Preliminary Visualizations Here are some initial visualizations of our data! 4.1 Maps Here is a map of all the sightings broken down by species in Wichita. And using ggmap we can show it over a basemap. 4.2 How people feel seeing canids And here are some people’s feelings broken down by which animal they saw. As you can see, a high proportion of people are worried about seeing coyotes and are happy to see foxes. "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
